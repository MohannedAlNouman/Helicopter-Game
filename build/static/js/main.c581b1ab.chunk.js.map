{"version":3,"sources":["helicopter/helicopter.js","Canvas.js","Hud.js","app.js","store.js","index.js"],"names":["helicopterSlice","createSlice","name","initialState","x","y","speedX","speedY","throttlePercent","reducers","userInput","state","action","payload","steerLeft","steerRight","throttleUp","throttleDown","actions","selectX","helicopter","selectY","selectSpeedX","selectSpeedY","selectThrottlePercent","Canvas","disptach","useDispatch","initialX","useSelector","initialY","accPercent","deltaT","finalX","finalY","coordinates","direction","draw","ctx","clearRect","beginPath","rect","fill","closePath","drawHelicopter","handleKeyDown","e","key","canvasRef","useRef","useEffect","context","current","getContext","document","addEventListener","removeEventListener","id","ref","tabIndex","width","height","onKeyDown","Hud","className","Math","round","App","epicMiddleware","createEpicMiddleware","rootEpic","combineEpics","action$","pipe","map","a","throttleTime","reducer","combineReducers","helicopterReducer","store","configureStore","middleware","getDefaultMiddleware","run","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c581b1ab.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\nimport {tap, throttleTime, map, switchMap} from \"rxjs/operators\";\r\n\r\nexport const helicopterSlice = createSlice({\r\n  name: \"helicopter\",\r\n  initialState: {\r\n    x: 0,\r\n    y: 0,\r\n    speedX: 0,\r\n    speedY: 0,\r\n    throttlePercent: 0\r\n  },\r\n  reducers: {\r\n    userInput: (state, action) => {\r\n      if (action.payload.x >= 670) {\r\n        state.x = 670;\r\n        state.speedX = 0;\r\n      } else if (action.payload.x <= 0) {\r\n        state.x = 0;\r\n        state.speedX = 0;\r\n      } else {\r\n        state.x = action.payload.x;\r\n      }\r\n      if (action.payload.y >= 670) {\r\n        state.y = 670;\r\n        state.speedY = -0.01;\r\n      } else if (action.payload.y <= 0) {\r\n        state.y = 0;\r\n        state.speedY = 0.01;\r\n      } else {\r\n        state.y = action.payload.y;\r\n        state.speedY = action.payload.speedY;\r\n      }\r\n    },\r\n    steerLeft: state => {\r\n      if (state.speedX <= -5) {\r\n        state.speedX = -5;\r\n      } else {\r\n        state.speedX -= 1;\r\n      }\r\n    },\r\n    steerRight: state => {\r\n      if (state.speedX >= 5) {\r\n        state.speedX = 5;\r\n      } else {\r\n        state.speedX += 1;\r\n      }\r\n    },\r\n    throttleUp: state => {\r\n      if (state.throttlePercent >= 100) {\r\n        state.throttlePercent = 100;\r\n      } else {\r\n        state.throttlePercent += 3;\r\n      }\r\n    },\r\n    throttleDown: state => {\r\n      if (state.throttlePercent <= 0) {\r\n        state.throttlePercent = 0;\r\n      } else {\r\n        state.throttlePercent -= 3;\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  userInput,\r\n  steerLeft,\r\n  steerRight,\r\n  throttleUp,\r\n  throttleDown\r\n} = helicopterSlice.actions;\r\n\r\nconst selectX = state => state.helicopter.x;\r\nconst selectY = state => state.helicopter.y;\r\nconst selectSpeedX = state => state.helicopter.speedX;\r\nconst selectSpeedY = state => state.helicopter.speedY;\r\nconst selectThrottlePercent = state => state.helicopter.throttlePercent;\r\n\r\nexport {selectX, selectY, selectSpeedX, selectSpeedY, selectThrottlePercent};\r\n\r\nexport const helicopterEpic = action$ => {\r\n  return action$.pipe(\r\n    // tap(a => {\r\n    //   console.log(a);\r\n    // }),\r\n    map(a => {\r\n      if (a.payload) {\r\n        if (a.payload.direction === \"up\") {\r\n          a = throttleUp();\r\n        } else if (a.payload.direction === \"down\") {\r\n          a = throttleDown();\r\n        } else if (a.payload.direction === \"right\") {\r\n          a = steerRight();\r\n        } else if (a.payload.direction === \"left\") {\r\n          a = steerLeft();\r\n        }\r\n      }\r\n      return a;\r\n    }),\r\n    throttleTime(1)\r\n  );\r\n};\r\n\r\nexport default helicopterSlice.reducer;\r\n","import React, {useRef, useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\n\r\nimport {\r\n  userInput,\r\n  selectX,\r\n  selectY,\r\n  selectSpeedX,\r\n  selectSpeedY,\r\n  selectThrottlePercent\r\n} from \"./helicopter/helicopter.js\";\r\n\r\nconst Canvas = () => {\r\n  const disptach = useDispatch();\r\n\r\n  let gravity = -2;\r\n  let accMax = 3;\r\n\r\n  let initialX = useSelector(selectX);\r\n  let initialY = useSelector(selectY);\r\n  let speedX = useSelector(selectSpeedX);\r\n  let speedY = useSelector(selectSpeedY);\r\n  let accPercent = useSelector(selectThrottlePercent);\r\n  let acc = (accPercent / 100) * accMax + gravity;\r\n  let deltaT = 5 / 1000;\r\n\r\n  let finalX = deltaT * speedX + initialX;\r\n  let finalY = deltaT * speedY + initialY;\r\n  let finalSpeedY = (deltaT * acc) / 2 + speedY;\r\n\r\n  let coordinates = {\r\n    x: finalX,\r\n    y: finalY,\r\n    speedY: finalSpeedY,\r\n    direction: \"\"\r\n  };\r\n\r\n  const drawHelicopter = ctx => {\r\n    ctx.beginPath();\r\n    ctx.rect(finalX, 670 - finalY, 50, 50);\r\n    ctx.fill();\r\n    ctx.closePath();\r\n  };\r\n\r\n  const draw = ctx => {\r\n    ctx.clearRect(0, 0, 720, 720);\r\n    drawHelicopter(ctx);\r\n  };\r\n\r\n  const handleKeyDown = e => {\r\n    // console.debug(\"Key event\", e);\r\n\r\n    if (e.key === \"ArrowUp\") {\r\n      coordinates.direction = \"up\";\r\n    } else if (e.key === \"ArrowDown\") {\r\n      coordinates.direction = \"down\";\r\n    } else if (e.key === \"ArrowRight\") {\r\n      coordinates.direction = \"right\";\r\n    } else if (e.key === \"ArrowLeft\") {\r\n      coordinates.direction = \"left\";\r\n    }\r\n  };\r\n\r\n  const canvasRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    draw(context);\r\n    disptach(userInput(coordinates));\r\n\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n    return function cleanup() {\r\n      document.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, [draw]);\r\n\r\n  return (\r\n    <canvas\r\n      id=\"canvas\"\r\n      ref={canvasRef}\r\n      tabIndex=\"0\"\r\n      width=\"720\"\r\n      height=\"720\"\r\n      onKeyDown={handleKeyDown}\r\n    ></canvas>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport {\r\n  selectY,\r\n  selectSpeedX,\r\n  selectSpeedY,\r\n  selectThrottlePercent\r\n} from \"./helicopter/helicopter.js\";\r\n\r\nconst Hud = () => {\r\n  return (\r\n    <div className=\"hud\">\r\n      <div className=\"hudInfo\">\r\n        <div className=\"leftSide\">\r\n          Altitude: {Math.round(useSelector(selectY))} pixels\r\n        </div>\r\n        <div className=\"rightSide\">\r\n          Speed X: {useSelector(selectSpeedX)} pixels/second\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div>Speed Y: {Math.round(useSelector(selectSpeedY))} pixels/second</div>\r\n      <div>Acceleration: {useSelector(selectThrottlePercent)}/100%</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hud;\r\n","import React from \"react\";\r\n\r\nimport Canvas from \"./Canvas.js\";\r\nimport Hud from \"./Hud.js\";\r\n\r\nconst App = () => {\r\n  return <div><Hud/><Canvas/></div>\r\n};\r\n\r\nexport default App;\r\n","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\r\nimport {combineEpics, createEpicMiddleware} from \"redux-observable\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nimport helicopterReducer, {helicopterEpic} from \"./helicopter/helicopter.js\";\r\n\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\n//combines all epics in 1\r\nconst rootEpic = combineEpics(helicopterEpic);\r\n\r\n//combines all reducers in 1\r\nconst reducer = combineReducers({helicopter: helicopterReducer});\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  middleware: [epicMiddleware, ...getDefaultMiddleware()]\r\n});\r\n\r\nepicMiddleware.run(rootEpic);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nimport App from \"./app.js\";\r\nimport store from \"./store.js\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}